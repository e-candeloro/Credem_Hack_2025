# Application Settings

ENVIRONMENT=development
DEBUG=true

PROJECT_ID=credemhack-cloudfunctions
INPUT_BUCKET=bucket
OUTPUT_BUCKET=bucket
LOCATION=us
PROCESSOR_ID=ba57b1e1060929ca


# LLM Configuration (keep if your OCR/ETL needs it, otherwise remove)
# LLM_VENDOR=groq
# LLM_MODEL=mixtral-8x7b-32768
# LLM_API_KEY=your_groq_api_key_here
# GOOGLE_API_KEY=your_google_api_key_here
# OLLAMA_BASE_URL=http://localhost:11434
# VISION_LLM_API_KEY=secret-key-change-in-production

# Security (unused in batch pipeline)
# SECRET_KEY=your-secret-key-change-in-production
# ALGORITHM=HS256
# ACCESS_TOKEN_EXPIRE_MINUTES=30

# Database (unused in this pipeline)
# DATABASE_URL=sqlite:///./test.db

# CORS Settings (unused)
# ALLOWED_ORIGINS=http://localhost:8501,http://localhost:3000,http://backend:8000

# Logging
LOG_LEVEL=INFO

# Frontend Configuration (unused)
# STREAMLIT_SERVER_PORT=8501
# STREAMLIT_SERVER_ADDRESS=0.0.0.0
# API_BASE_URL=http://backend:8000

# GCP Configuration
GCP_PROJECT_ID=your-gcp-project-id
GCP_REGION=your-gcp-region
INPUT_BUCKET=your-input-bucket-name
EXPORT_BUCKET=your-export-bucket-name
DOCAI_PROCESSOR_ID=your-document-ai-processor-id

# To authenticate with GCP, you should use Application Default Credentials (ADC).
# In a local environment, you can set this up by running:
# gcloud auth application-default login
# In a Docker container or Cloud Run, the service account attached to the environment will be used automatically.
# GOOGLE_APPLICATION_CREDENTIALS=/path/to/your/credentials.json
